@import "compass/css3";
@import "lib/animations";
@import "lib/keyframes";
@import "lib/media";
@import "lib/ceaser-easing/ceaser";
// gradients for ie
$experimental-support-for-svg: true;

// global sprites
$icons: sprite-map("icons/*.png", $spacing: 10px);

// responsive
$break-small: 500px;
$break-large: 1180px;
@mixin respond-to($media) {
  @if $media == pda {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == wide {
    @media only screen and (min-width: $break-large) { @content; }
  } 
}
// retina bg
@mixin retina{
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
    @content;
  }
}

// BACKGROUND SIZE
@mixin background-size($width: 100%, $height: 100%) { 
  -webkit-background-size: $width $height;
          background-size: $width $height;
}
// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  -webkit-transform: rotate($deg + deg);
          transform: rotate($deg + deg);
}
 
// skew
@mixin skew($deg) {
     -moz-transform: skew($deg);
       -o-transform: skew($deg);
  -webkit-transform: skew($deg);
      -ms-transform: skew($deg);
          transform: skew($deg);
}
// translate
@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    transform: translate($x, $y);
}
// box-sizing
@mixin box-sizing($var) {
  -webkit-box-sizing: $var;
          box-sizing: $var;
}

@mixin user-select() {
  -webkit-user-select: none;
          user-select: none;
}

// image replacement extend
%hide-text{
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}

%shadow{
    @include box-shadow(inset 0 0 0 1px #00abc6, 0 0 10px #0f78ea, 0 0 10px #0f78ea);
}

%clr{
  &:after{
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
    }
}

// placeholder color
@mixin placeholder($color, $font-family) {
  &.placeholder {
    color: $color;
    font-family: $font-family;
  }
  &:-moz-placeholder {
    color: $color;
    font-family: $font-family;
  }
  &::-webkit-input-placeholder {
    color: $color;
    font-family: $font-family;
  }
}

@mixin gray(){
  filter: url(../img/filter.svg#grayscale);
  filter: gray;
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
}
%gray{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+ */
  -webkit-filter: grayscale(100%);
}
%gray-half{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'saturate\' values=\'0.5\'/></filter></svg>#grayscale"); /* Firefox 10+ */
  -webkit-filter: grayscale(50%); /* Chrome 19+ & Safari 6+ */
}
%gray-zero{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
  -webkit-filter: grayscale(0%);
}

// sized sprites
@mixin image-size($path){
  width: image-width($path);
  height: image-height($path);
}
@mixin sized-sprite($map, $sprite){
  background: sprite($map, $sprite) no-repeat;
  @include image-size(sprite-file($map, $sprite));
}